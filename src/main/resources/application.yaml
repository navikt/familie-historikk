application:
  name: familie-historikk

server:
  port: 8050
  servlet:
    context-path: /

spring:
  autoconfigure.exclude: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
  main.banner-mode: "off"
  data:
    jdbc:
      repositories:
        enabled: true
  main:
    allow-bean-definition-overriding: true
  flyway:
    enabled: false
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/familie-historikk-dev
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 2
      connection-test-query: "select 1"
      max-lifetime: 30000
      minimum-idle: 1
      data-source-properties.stringtype: unspecified # Nødvendig for å kunde sende en String til et json-felt i PostgresSql
  kafka:
    bootstrapServers: ${KAFKA_BROKERS:localhost}
    properties:
      securityProtocol: SSL
      registryUser: ${KAFKA_SCHEMA_REGISTRY_USER:user}
      registryPassword: ${KAFKA_SCHEMA_REGISTRY_PASSWORD:pwd}
      certificate: ${KAFKA_CERTIFICATE:cert}
      certificatePath: ${KAFKA_CERTIFICATE_PATH:/dev/zero}
      privateKey: ${KAFKA_PRIVATE_KEY:key}
      privateKeyPath: ${KAFKA_PRIVATE_KEY_PATH:/dev/zero}
      ca: ${KAFKA_CA:ca}
      caPath: ${KAFKA_CA_PATH}
      keystorePath: ${KAFKA_KEYSTORE_PATH:/dev/zero}
      truststorePath: ${KAFKA_TRUSTSTORE_PATH:/dev/zero}
      credstorePassword: ${KAFKA_CREDSTORE_PASSWORD:pwd}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: srvfamilie-familie-historikk
      max-poll-records: 1
      auto-offset-reset: latest
      enable-auto-commit: false

no.nav.security.jwt:
  issuer.azuread:
    discoveryurl: ${AZUREAD_DISCOVERY_URL}
    accepted_audience: ${AZURE_APP_CLIENT_ID}
    cookie_name: azure_token
  client:
    registration:
      familie-tilbake-frontend:
        resource-url: ${FAMILIE_TILBAKE_FRONTEND_URL}
        token-endpoint-url: ${AZUREAD_TOKEN_ENDPOINT_URL}
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic

management:
  endpoint.health.show-details: always
  endpoints.web:
    exposure.include: info, health, metrics, prometheus
    base-path: "/internal"
    path-mapping:
      info: "status/isAlive"
  metrics.export.prometheus.enabled: true
  health:
    db:
      enabled: true



AZUREAD_DISCOVERY_URL: https://login.microsoftonline.com/navq.onmicrosoft.com/v2.0/.well-known/openid-configuration
AZUREAD_TOKEN_ENDPOINT_URL: https://login.microsoftonline.com/navq.onmicrosoft.com/oauth2/v2.0/token
FAMILIE_TILBAKE_FRONTEND_URL: https://familie-tilbake-frontend.${ON_PREM_URL_ENV}.intern.nav.no

ACCEPTED_CLIENTS: ${FAMILIE_TILBAKE_FRONTEND_CLIENT_ID}

